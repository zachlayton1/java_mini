services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: postgres
      POSTGRES_DB: hotel
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  booking_service:
    build: ./booking-service
    ports: ["8085:8080"] # host 8085 → container 8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel?sslmode=disable
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }

  availability_service:
    build: ./availability-service
    ports: ["8086:8080"] # host 8086 → container 8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel?sslmode=disable
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }

volumes:
  pgdata:
